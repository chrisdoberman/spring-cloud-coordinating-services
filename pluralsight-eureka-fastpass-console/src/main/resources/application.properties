server.port=8082

# eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

management.endpoints.web.exposure.include=hystrix.stream

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#spring.cloud.stream.bindings.output.destination=fastpasstoll
spring.cloud.stream.bindings.fastpassTollChannel.destination=fastpasstoll
spring.cloud.stream.default.contentType=application/json

ribbon.eureka.enabled=true
# can configure as a property or in a config class
#pluralsight-fastpass-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.WeightedResponseTimeRule
pluralsight-fastpass-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

# demonstrate load balancing without discover/eureka
# to demo, change to a bad port and set the below property to zero (from 1)
#pluralsight-fastpass-service-local.ribbon.listOfServers=http://localhost:58379,http://localhost:58280
#pluralsight-fastpass-service-local.ribbon.MaxAutoRetries=0
#pluralsight-fastpass-service-local.ribbon.OkToRetryOnAllOperations=false
# setting this to 1 will auto retry the next server
#pluralsight-fastpass-service-local.ribbon.MaxAutoRetriesNextServer=1
spring.cloud.stream.bindings.fastpassTollChannel.producer.partitionKeyExpression=payload.stationId
spring.cloud.stream.bindings.fastpassTollChannel.producer.partitionCount=3
